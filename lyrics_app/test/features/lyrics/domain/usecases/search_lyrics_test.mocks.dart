// Mocks generated by Mockito 5.4.5 from annotations
// in lyrics_app/test/features/lyrics/domain/usecases/search_lyrics_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:dartz/dartz.dart' as _i2;
import 'package:lyrics_app/core/error/failures.dart' as _i5;
import 'package:lyrics_app/features/lyrics/domain/entities/arrangement.dart'
    as _i8;
import 'package:lyrics_app/features/lyrics/domain/entities/lyric.dart' as _i6;
import 'package:lyrics_app/features/lyrics/domain/entities/lyric_section.dart'
    as _i7;
import 'package:lyrics_app/features/lyrics/domain/repositories/lyrics_repository.dart'
    as _i3;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeEither_0<L, R> extends _i1.SmartFake implements _i2.Either<L, R> {
  _FakeEither_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [LyricsRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockLyricsRepository extends _i1.Mock implements _i3.LyricsRepository {
  MockLyricsRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Either<_i5.Failure, List<_i6.Lyric>>> getAllLyrics() =>
      (super.noSuchMethod(
        Invocation.method(
          #getAllLyrics,
          [],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, List<_i6.Lyric>>>.value(
            _FakeEither_0<_i5.Failure, List<_i6.Lyric>>(
          this,
          Invocation.method(
            #getAllLyrics,
            [],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, List<_i6.Lyric>>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, _i6.Lyric>> getLyricById(String? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #getLyricById,
          [id],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, _i6.Lyric>>.value(
            _FakeEither_0<_i5.Failure, _i6.Lyric>(
          this,
          Invocation.method(
            #getLyricById,
            [id],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, _i6.Lyric>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, _i6.Lyric>> createLyric(
          _i6.Lyric? lyric) =>
      (super.noSuchMethod(
        Invocation.method(
          #createLyric,
          [lyric],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, _i6.Lyric>>.value(
            _FakeEither_0<_i5.Failure, _i6.Lyric>(
          this,
          Invocation.method(
            #createLyric,
            [lyric],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, _i6.Lyric>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, _i6.Lyric>> updateLyric(
          _i6.Lyric? lyric) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateLyric,
          [lyric],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, _i6.Lyric>>.value(
            _FakeEither_0<_i5.Failure, _i6.Lyric>(
          this,
          Invocation.method(
            #updateLyric,
            [lyric],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, _i6.Lyric>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, void>> deleteLyric(String? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteLyric,
          [id],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, void>>.value(
            _FakeEither_0<_i5.Failure, void>(
          this,
          Invocation.method(
            #deleteLyric,
            [id],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, void>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, _i7.LyricSection>> createSection(
          _i7.LyricSection? section) =>
      (super.noSuchMethod(
        Invocation.method(
          #createSection,
          [section],
        ),
        returnValue:
            _i4.Future<_i2.Either<_i5.Failure, _i7.LyricSection>>.value(
                _FakeEither_0<_i5.Failure, _i7.LyricSection>(
          this,
          Invocation.method(
            #createSection,
            [section],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, _i7.LyricSection>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, _i7.LyricSection>> updateSection(
          _i7.LyricSection? section) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateSection,
          [section],
        ),
        returnValue:
            _i4.Future<_i2.Either<_i5.Failure, _i7.LyricSection>>.value(
                _FakeEither_0<_i5.Failure, _i7.LyricSection>(
          this,
          Invocation.method(
            #updateSection,
            [section],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, _i7.LyricSection>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, void>> deleteSection(String? sectionId) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteSection,
          [sectionId],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, void>>.value(
            _FakeEither_0<_i5.Failure, void>(
          this,
          Invocation.method(
            #deleteSection,
            [sectionId],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, void>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, List<_i7.LyricSection>>> reorderSections(
    String? lyricId,
    List<String>? sectionIds,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #reorderSections,
          [
            lyricId,
            sectionIds,
          ],
        ),
        returnValue:
            _i4.Future<_i2.Either<_i5.Failure, List<_i7.LyricSection>>>.value(
                _FakeEither_0<_i5.Failure, List<_i7.LyricSection>>(
          this,
          Invocation.method(
            #reorderSections,
            [
              lyricId,
              sectionIds,
            ],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, List<_i7.LyricSection>>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, _i8.Arrangement>> createArrangement(
          _i8.Arrangement? arrangement) =>
      (super.noSuchMethod(
        Invocation.method(
          #createArrangement,
          [arrangement],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, _i8.Arrangement>>.value(
            _FakeEither_0<_i5.Failure, _i8.Arrangement>(
          this,
          Invocation.method(
            #createArrangement,
            [arrangement],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, _i8.Arrangement>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, _i8.Arrangement>> updateArrangement(
          _i8.Arrangement? arrangement) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateArrangement,
          [arrangement],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, _i8.Arrangement>>.value(
            _FakeEither_0<_i5.Failure, _i8.Arrangement>(
          this,
          Invocation.method(
            #updateArrangement,
            [arrangement],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, _i8.Arrangement>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, void>> deleteArrangement(
          String? arrangementId) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteArrangement,
          [arrangementId],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, void>>.value(
            _FakeEither_0<_i5.Failure, void>(
          this,
          Invocation.method(
            #deleteArrangement,
            [arrangementId],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, void>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, List<_i6.Lyric>>> searchLyrics(
          String? query) =>
      (super.noSuchMethod(
        Invocation.method(
          #searchLyrics,
          [query],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, List<_i6.Lyric>>>.value(
            _FakeEither_0<_i5.Failure, List<_i6.Lyric>>(
          this,
          Invocation.method(
            #searchLyrics,
            [query],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, List<_i6.Lyric>>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, String>> exportLyric(String? lyricId) =>
      (super.noSuchMethod(
        Invocation.method(
          #exportLyric,
          [lyricId],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, String>>.value(
            _FakeEither_0<_i5.Failure, String>(
          this,
          Invocation.method(
            #exportLyric,
            [lyricId],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, String>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, _i6.Lyric>> importLyric(String? data) =>
      (super.noSuchMethod(
        Invocation.method(
          #importLyric,
          [data],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, _i6.Lyric>>.value(
            _FakeEither_0<_i5.Failure, _i6.Lyric>(
          this,
          Invocation.method(
            #importLyric,
            [data],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, _i6.Lyric>>);
}
